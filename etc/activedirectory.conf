[DEFAULT]
verbose = False
debug = False

# Which backend store should Keystone use by default.
# Default: 'sqlite'
# Available choices are 'sqlite' [future will include LDAP, PAM, etc]
default_store = activedirectory

# Log to this file. Make sure you do not set the same log
# file for both the API and registry servers!
log_file = keystone.activedirectory.log
log_dir = .

# List of backends to be configured
backends = keystone.backends.sqlalchemy,keystone.backends.activedirectory
#For LDAP support, add: ,keystone.backends.ldap

# Dictionary Maps every service to a header.Missing services would get header
# X_(SERVICE_NAME) Key => Service Name, Value => Header Name
service-header-mappings = {
    'nova' : 'X-Server-Management-Url',
    'swift' : 'X-Storage-Url',
    'cdn' : 'X-CDN-Management-Url'}

#List of extensions currently loaded.
#Refer docs for list of supported extensions. 
extensions= osksadm,oskscatalog

# Address to bind the API server
# TODO Properties defined within app not available via pipeline.
service_host = 0.0.0.0
service_port = 5000

# SSL for API server
service_ssl = False

# Address to bind the Admin API server
admin_host = 0.0.0.0
admin_port = 35357

# SSL for API Admin server
admin_ssl = False

# Keystone certificate file (modify as needed)
# Only required if *_ssl is set to True
certfile = /etc/keystone/ssl/certs/keystone.pem

# Keystone private key file (modify as needed)
# Only required if *_ssl is set to True
keyfile = /etc/keystone/ssl/private/keystonekey.pem

# Keystone trusted CA certificates  (modify as needed)
# Only required if *_ssl is set to True
ca_certs = /etc/keystone/ssl/certs/ca.pem

# Client certificate required
# Only relevant if *_ssl is set to True
cert_required = True

#Role that allows to perform admin operations.
keystone-admin-role = Admin
keystone-service-admin-role = KeystoneServiceAdmin
hash-password = True

[keystone.backends.sqlalchemy]
sql_connection = sqlite:///
sql_idle_timeout = 30
backend_entities = ['Endpoints', 'User', 'UserRoleAssociation', 'Role', 'Credentials', 'EndpointTemplates', 'Token', 'Service']

[keystone.backends.activedirectory]
# Add 184.106.145.140 to hosts as AD-SQL-STUB.openstack.local for SSL matching
server = AD-SQL-STUB.openstack.local
use_ssl = True
cacertfile = AD-SQL-STUB.pem
port = 636
user = openstack\keystone
password = Password1
root = 'ou=tenants,dc=openstack,dc=local'
role_map = 'Admin':'cn=Domain Admins,cn=Users,dc=openstack,dc=local'

backend_entities = ['Tenant']

[pipeline:admin]
pipeline =
        urlrewritefilter
        d5_compat
        admin_api

[pipeline:keystone-legacy-auth]
pipeline =
        urlrewritefilter
        legacy_auth
        d5_compat
        service_api

[app:service_api]
paste.app_factory = keystone.server:service_app_factory

[app:admin_api]
paste.app_factory = keystone.server:admin_app_factory

[filter:urlrewritefilter]
paste.filter_factory = keystone.middleware.url:filter_factory

[filter:legacy_auth]
paste.filter_factory = keystone.frontends.legacy_token_auth:filter_factory

[filter:d5_compat]
paste.filter_factory = keystone.frontends.d5_compat:filter_factory

[filter:debug]
paste.filter_factory = keystone.common.wsgi:debug_filter_factory
